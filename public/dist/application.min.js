"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ui.router","ui.bootstrap","ui.utils","highcharts-ng"],registerModule=function(moduleName){angular.module(moduleName,[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("ads"),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("campaigns"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("places"),ApplicationConfiguration.registerModule("users"),angular.module("ads").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Ads","ads","dropdown","/ads(/create)?",void 0,!1,["admin"]),Menus.addSubMenuItem("topbar","ads","List Ads","ads"),Menus.addSubMenuItem("topbar","ads","New Ad","ads/create")}]),angular.module("ads").config(["$stateProvider",function($stateProvider){$stateProvider.state("listAds",{url:"/ads",templateUrl:"modules/ads/views/list-ads.client.view.html"}).state("createAd",{url:"/ads/create",templateUrl:"modules/ads/views/create-ad.client.view.html"}).state("viewAd",{url:"/ads/:adId",templateUrl:"modules/ads/views/view-ad.client.view.html"}).state("editAd",{url:"/ads/:adId/edit",templateUrl:"modules/ads/views/edit-ad.client.view.html"})}]),angular.module("ads").controller("AdsController",["$scope","$stateParams","$location","Authentication","Ads",function($scope,$stateParams,$location,Authentication,Ads){$scope.authentication=Authentication,$scope.create=function(){var ad=new Ads({name:this.name,campaign:this.campaign,image:this.image,content:this.content,link:this.link,width:this.width,height:this.height});ad.$save(function(response){$location.path("ads/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.name="",this.campaign=void 0,this.image="",this.content="",this.link="",this.width=728,this.height=90},$scope.setImageData=function(fileContent){void 0!==$scope.ad?$scope.ad.image=fileContent:this.image=fileContent},$scope.remove=function(ad){if(ad){ad.$remove();for(var i in $scope.ads)$scope.ads[i]===ad&&$scope.ads.splice(i,1)}else $scope.ad.$remove(function(){$location.path("ads")})},$scope.update=function(){var ad=$scope.ad;ad.$update(function(){$location.path("ads/"+ad._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.ads=Ads.query()},$scope.findOne=function(){$scope.ad=Ads.get({adId:$stateParams.adId})},$scope.exampleAdsenseContent=function(){$scope.image="",$scope.link="adsense",$scope.content="[adsense]<!--\ngoogle_ad_client = \"ca-pub-000000000000000000\";\n/* AdSense Example */\ngoogle_ad_slot = \"0000000000\";\ngoogle_ad_width = 728;\ngoogle_ad_height = 90;\n//-->\nvar script = document.createElement('script');\nscript.type = 'text/javascript';\nscript.src = 'http://pagead2.googlesyndication.com/pagead/show_ads.js';\ndocument.body.appendChild(script);\n[/adsense]"}}]),angular.module("ads").directive("onReadFile",["$parse",function($parse){return{restrict:"A",scope:!1,link:function(scope,element,attrs){var fn=$parse(attrs.onReadFile);element.on("change",function(onChangeEvent){var reader=new FileReader;reader.onload=function(onLoadEvent){scope.$apply(function(){fn(scope,{$fileContent:onLoadEvent.target.result})})},reader.readAsDataURL((onChangeEvent.srcElement||onChangeEvent.target).files[0])})}}}]),angular.module("ads").factory("Ads",["$resource",function($resource){return $resource("ads/:adId",{adId:"@_id"},{update:{method:"PUT"}})}]),angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Articles","articles","dropdown","/articles(/create)?"),Menus.addSubMenuItem("topbar","articles","List Articles","articles"),Menus.addSubMenuItem("topbar","articles","New Article","articles/create")}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.title="",this.content=""},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("campaigns").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Campaigns","campaigns","dropdown","/campaigns(/create)?",void 0,!1,["admin"]),Menus.addSubMenuItem("topbar","campaigns","List Campaigns","campaigns"),Menus.addSubMenuItem("topbar","campaigns","New Campaign","campaigns/create")}]),angular.module("campaigns").config(["$stateProvider",function($stateProvider){$stateProvider.state("listCampaigns",{url:"/campaigns",templateUrl:"modules/campaigns/views/list-campaigns.client.view.html"}).state("createCampaign",{url:"/campaigns/create",templateUrl:"modules/campaigns/views/create-campaign.client.view.html"}).state("viewCampaign",{url:"/campaigns/:campaignId",templateUrl:"modules/campaigns/views/view-campaign.client.view.html"}).state("editCampaign",{url:"/campaigns/:campaignId/edit",templateUrl:"modules/campaigns/views/edit-campaign.client.view.html"})}]),angular.module("campaigns").controller("CampaignsController",["$scope","$stateParams","$location","Authentication","Campaigns",function($scope,$stateParams,$location,Authentication,Campaigns){$scope.authentication=Authentication,$scope.create=function(){var campaign=new Campaigns({name:this.name,ads:this.ads,includedPlaces:this.includedPlaces,owner:this.owner,active:!0});campaign.$save(function(response){$location.path("campaigns/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.name="",this.ads=[],this.includedPlaces=[],this.owner=void 0},$scope.remove=function(campaign){if(campaign){campaign.$remove();for(var i in $scope.places)$scope.campaigns[i]===campaign&&$scope.campaigns.splice(i,1)}else $scope.campaign.$remove(function(){$location.path("campaigns")})},$scope.update=function(){var campaign=$scope.campaign;campaign.$update(function(){$location.path("campaigns/"+campaign._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.campaigns=Campaigns.query()},$scope.findOne=function(){$scope.campaign=Campaigns.get({campaignId:$stateParams.campaignId})}}]),angular.module("campaigns").factory("Campaigns",["$resource",function($resource){return $resource("campaigns/:campaignId",{campaignId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"}),$stateProvider.state("dashboard",{url:"/dashboard",templateUrl:"modules/core/views/dashboard.client.view.html"})}]),angular.module("core").controller("DashboardController",["$scope","$http","Authentication",function($scope,$http,Authentication){function getBaseDay(timestamp){return timestamp-timestamp%864e5}function sanitizeDates(){$scope.since.setTime(getBaseDay($scope.since.getTime())),$scope.until.setTime(getBaseDay($scope.until.getTime()))}function getStats(drawPlotCallback,tableStatsCallback){var sinceDMY=""+$scope.since.getDate()+"-"+($scope.since.getMonth()+1)+"-"+$scope.since.getFullYear(),untilDMY=""+$scope.until.getDate()+"-"+($scope.until.getMonth()+1)+"-"+$scope.until.getFullYear();$http.get("/stats/since-"+sinceDMY+"/until-"+untilDMY).success(function(series){drawPlotCallback(series.plot),tableStatsCallback(series.table)}).error(function(){console.log("error")})}function clearAllSeries(){for(var chart=$("#chart1").highcharts(),i=0;i<chart.series.length;i++)chart.series[i].remove()}function drawGraphic(timeseries){clearAllSeries(),timeseries[0].name="views",timeseries[0].color="#4d90fe",timeseries[0].marker={symbol:"circle"},timeseries[0].yAxis=0,timeseries[1].name="clicks",timeseries[1].color="#ed561b",timeseries[1].marker={symbol:"diamond"},timeseries[1].yAxis=1,$scope.chartConfig={options:{chart:{type:"line",zoomType:"x"}},series:timeseries,title:{text:$scope.since.getDate()+"/"+($scope.since.getMonth()+1)+"/"+$scope.since.getFullYear()+" - "+$scope.until.getDate()+"/"+($scope.until.getMonth()+1)+"/"+$scope.until.getFullYear()},xAxis:{type:"datetime",dateTimeLabelFormats:{day:"%e. %b"},title:{text:"Date"}},yAxis:[{title:{text:"Views",style:{color:"#4d90fe"}},floor:0,opposite:!1},{title:{text:"Clicks",style:{color:"#ed561b"}},floor:0,opposite:!0}],loading:!1}}function resetCampaignAdStats(){$scope.campaigns.forEach(function(campaign){campaign.ads.forEach(function(ad){ad.stats={views:0,clicks:0}})})}function setAdStats(adId,adStats){$scope.campaigns.forEach(function(campaign){campaign.ads.forEach(function(ad){ad._id===adId&&(ad.stats.views=adStats.views,ad.stats.clicks=adStats.clicks)})})}function showTableStats(adStats){for(var adId in adStats)setAdStats(adId,adStats[adId])}$scope.authentication=Authentication,$scope.campaigns=data.campaigns,void 0===data.campaigns&&(window.location="/"),$scope.since=new Date,$scope.since.setTime($scope.since.getTime()-2592e6),$scope.until=new Date,$scope.openDatepicker=function($event,datepickerFlag){$event.preventDefault(),$event.stopPropagation(),"since"===datepickerFlag?($scope.sinceOpened=!0,$scope.untilOpened=!1):"until"===datepickerFlag&&($scope.sinceOpened=!1,$scope.untilOpened=!0)},$scope.dateOptions={formatYear:"yy",startingDay:1,showWeeks:!1},$scope.reloadStats=function(){void 0!==$scope.since&&void 0!==$scope.until&&""!==$scope.since&&""!==$scope.until&&($scope.chartConfig={title:{text:"Loading data"},loading:!0},sanitizeDates(),resetCampaignAdStats(),getStats(drawGraphic,showTableStats))},$scope.reloadStats()}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","$location","Authentication",function($scope,$location,Authentication){$scope.authentication=Authentication,null!==$scope.authentication.user&&$location.path("/dashboard")}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["user"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:isPublic||this.menus[menuId].isPublic,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:isPublic||this.menus[menuId].isPublic,roles:roles||this.defaultRoles,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("places").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Places","places","dropdown","/places(/create)?",void 0,!1,["admin"]),Menus.addSubMenuItem("topbar","places","List Places","places"),Menus.addSubMenuItem("topbar","places","New Place","places/create")}]),angular.module("places").config(["$stateProvider",function($stateProvider){$stateProvider.state("listPlaces",{url:"/places",templateUrl:"modules/places/views/list-places.client.view.html"}).state("createPlace",{url:"/places/create",templateUrl:"modules/places/views/create-place.client.view.html"}).state("viewPlace",{url:"/places/:placeId",templateUrl:"modules/places/views/view-place.client.view.html"}).state("editPlace",{url:"/places/:placeId/edit",templateUrl:"modules/places/views/edit-place.client.view.html"})}]),angular.module("places").controller("PlacesController",["$scope","$stateParams","$location","Authentication","Places",function($scope,$stateParams,$location,Authentication,Places){$scope.authentication=Authentication,$scope.create=function(){var place=new Places({name:this.name,width:this.width,height:this.height});place.$save(function(response){$location.path("places/"+response._id)},function(errorResponse){$scope.error=errorResponse.data.message}),this.name="",this.width="",this.height=""},$scope.remove=function(place){if(place){place.$remove();for(var i in $scope.places)$scope.places[i]===place&&$scope.places.splice(i,1)}else $scope.place.$remove(function(){$location.path("places")})},$scope.update=function(){var place=$scope.place;place.$update(function(){$location.path("places/"+place._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.places=Places.query()},$scope.findOne=function(){$scope.place=Places.get({placeId:$stateParams.placeId})}}]),angular.module("places").factory("Places",["$resource",function($resource){return $resource("places/:placeId",{placeId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/signin.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("UsersController",["$scope","$stateParams","$location","Authentication","Users",function($scope,$stateParams,$location,Authentication,Users){$scope.find=function(){$scope.users=Users.query()},$scope.findOne=function(){$scope.user=Users.get({userId:$stateParams.userId})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);